#In this SQL code, I'm querying a database that's holding grocery store data to answer questions about the data.

--Create a grocery store database

CREATE TABLE store (id INTEGER PRIMARY KEY, item TEXT, section TEXT, price INTEGER, available_items INTEGER, max_stock INTEGER);

INSERT INTO store VALUES (1, "Apples", "Produce", 2.99, 75, 100);
INSERT INTO store VALUES (2, "Pears", "Produce", 0.99, 95, 100);
INSERT INTO store VALUES (3, "Cupcakes", "Bakery", 7.99, 20, 100);
INSERT INTO store VALUES (4, "Cheesecake", "Bakery", 10.99, 10, 100);
INSERT INTO store VALUES (5, "Cookies", "Bakery", 4.99, 15, 100);
INSERT INTO store VALUES (6, "Shrimp", "Seafood", 9.25, 30, 100);
INSERT INTO store VALUES (7, "Crab Legs", "Seafood", 15.99, 35, 100);
INSERT INTO store VALUES (8, "Talapia", "Seafood", 8.99, 25, 100);
INSERT INTO store VALUES (9, "Hamburger Meat", "Meat", 5.99, 55, 100);
INSERT INTO store VALUES (10, "Chicken Tenders", "Meat", 7.99, 25, 100);
INSERT INTO store VALUES (11, "Milk", "Dairy", 2.99, 33, 100);
INSERT INTO store VALUES (12, "Cheese", "Dairy", 4.99, 80, 100);
INSERT INTO store VALUES (13, "Toothpaste", "Health", 2.99, 29, 100);
INSERT INTO store VALUES (14, "Tylenol", "Health", 8.99, 26, 100);
INSERT INTO store VALUES (15, "Motrin", "Health", 8.99, 47, 100);

--Display the database ordered by price.
SELECT * FROM store
ORDER BY price;

--What is the average price of items in the Bakery section?
SELECT AVG(price) FROM store
WHERE section = 'Bakery';

--How many items are available from the max amount of stock if the available items are below 30?
SELECT item,  available_items, max_stock  FROM store
WHERE available_items < 30;

--What is the current inventory sales price of all items in the store?
SELECT SUM(price) FROM store;
